* PhiSym
** Setup:
   : cmsrel CMSSW_7_4_X (X>1)
   : cd CMSSW_7_4_X/src/
   : git clone https://github.com/ECALELFS/PhiSym
   : scram b -j
   : cmsenv

** Local test with Run2015A data
   + run the prodecer on few lumis:
   : cmsRun test/PhiSymProducer_cfg.py
   + explore the results with test/drawSimpleChecks.py

   + run the calibration routine with:
   : cmsRun test/PhiSymCalibration_cfg.py


** Run CRAB jobs:
   : cd crab-jobs
   : source /cvmfs/cms.cern.ch/crab3/crab.sh 
   : cmsenv
   : crab submit run_PHISYM_crab3.py

   + MISSING: script for dataset growth.


** EcalCalibAlgos:
*** PhiSymProducer (aka "step1"):
    + Produce slim EDM files to be read in PhiSymCalibration where the inter-calibration constants are computed.
    + The number of luminosity blocks summed at this step can be set from the cfg python (default 1).
    + Bad channels are processed in the same way of the good ones, except that a flag is set in the PhiSymInfos collection.

*** PhiSymCalibration 


** EcalCalibDataFomats:
   Contains PhiSym custum RecHits and Lumi-informations collections definition:

*** PhiSymRecHit:
    + raw-id -> detector id of the cristall.
    + nhits  -> number of events with recHit energy inside acceptance window.
    + sumEt  -> up to 10 mis-calibrated values + central value.
    + sumEt2 -> sum of the squared transverse energy.
    + sumLS  -> sum of the laser correction.
    + sumLS2 -> sum of the squared laser correction.


*** PhiSymInfos:
    + nEvents        -> number of events recorded during the lumi block(s).
    + x,y,z          -> beamspot 3D avarage position and RMS.
    + start/end lumi -> first and last lumi block (if lumis sum is enabled in the producer).
    + badChannels    -> map<bad channel id, channel status>, the "bad channel status threshold" is set by the producer.

