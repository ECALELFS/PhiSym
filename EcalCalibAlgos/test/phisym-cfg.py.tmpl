# cfg for phi symmetry calibration
# from ALCARAW applying laser corrections
#

import FWCore.ParameterSet.Config as cms

process=cms.Process("PHISYM")

process.load('Configuration/StandardSequences/FrontierConditions_GlobalTag_cff')
process.load('Configuration.Geometry.GeometryPilot2_cff')
process.load('Calibration/EcalAlCaRecoProducers/alcastreamEcalPhiSym_cff' )
process.load("RecoVertex.BeamSpotProducer.BeamSpot_cff")
process.load('L1TriggerConfig.L1GtConfigProducers.L1GtTriggerMaskTechTrigConfig_cff')
process.load('HLTrigger/HLTfilters/hltLevel1GTSeed_cfi')
process.load('RecoLocalCalo.EcalRecProducers.ecalMultiFitUncalibRecHit_cfi')
process.load('RecoLocalCalo.EcalRecProducers.ecalUncalibRecHit_cfi')
process.load('RecoLocalCalo.EcalRecProducers.ecalRecHit_cfi')

process.load('FWCore/MessageService/MessageLogger_cfi')
process.MessageLogger.cerr.FwkReport.reportEvery = 1000
process.MessageLogger.cerr.default = cms.untracked.PSet(
    limit = cms.untracked.int32(10000000),
    reportEvery = cms.untracked.int32(5000)
    )

process.source = cms.Source("PoolSource",
                            fileNames = cms.untracked.vstring('/store/data/Run2012A/AlCaPhiSym/RAW/v1/000/190/482/D08E58E5-4B7F-E111-8BBD-003048D2C0F4.root')
                            )

runMultiFit=True

#ecalUncalibRecHit
process.ecalUncalibRecHit.EBdigiCollection = cms.InputTag("HLTEcalPhiSymFilter","phiSymEcalDigisEB")
process.ecalUncalibRecHit.EEdigiCollection = cms.InputTag("HLTEcalPhiSymFilter","phiSymEcalDigisEE")

#ecalMultiFitUncalibRecHit
process.ecalMultiFitUncalibRecHit.EBdigiCollection = cms.InputTag("HLTEcalPhiSymFilter","phiSymEcalDigisEB")
process.ecalMultiFitUncalibRecHit.EEdigiCollection = cms.InputTag("HLTEcalPhiSymFilter","phiSymEcalDigisEE")

#ecalRecHit (no ricovery)
process.ecalRecHit.killDeadChannels = cms.bool( False )
process.ecalRecHit.recoverEBVFE = cms.bool( False )
process.ecalRecHit.recoverEEVFE = cms.bool( False )
process.ecalRecHit.recoverEBFE = cms.bool( False )
process.ecalRecHit.recoverEEFE = cms.bool( False )
process.ecalRecHit.recoverEEIsolatedChannels = cms.bool( False )
process.ecalRecHit.recoverEBIsolatedChannels = cms.bool( False )
if (not runMultiFit):
    process.ecalRecHit.EBuncalibRecHitCollection = cms.InputTag("ecalUncalibRecHit","EcalUncalibRecHitsEB")
    process.ecalRecHit.EEuncalibRecHitCollection = cms.InputTag("ecalUncalibRecHit","EcalUncalibRecHitsEE")

process.phisymcalib = cms.EDAnalyzer("PhiSymmetryCalibration",
                                     ecalRecHitsProducer = cms.string("hltAlCaPhiSymStream"),
                                     barrelHitCollection = cms.string("phiSymEcalRecHitsEB"),
                                     endcapHitCollection = cms.string("phiSymEcalRecHitsEE"),
                                     eCut_barrel = cms.double(0.550),                                              
                                     eCut_endcap = cms.double(0.000),
                                     ap = cms.double( -0.150),
                                     am = cms.double( -0.150),
                                     b  = cms.double(  0.600),
                                     cPhiKFactor = cms.bool(True),
                                     eventSet = cms.int32(1),
                                     statusThreshold = cms.untracked.int32(0)
                                     )


# the xml file must be put in 
# $CMSSW_BASE/src/CalibCalorimetry/CaloMiscalibTools/data

process.GlobalTag.globaltag = 'GLOBALTAG'

if (not runMultiFit):
    process.reconstruction_step = cms.Sequence( process.ecalUncalibRecHit + process.ecalRecHit )
else:
    process.reconstruction_step = cms.Sequence( process.ecalMultiFitUncalibRecHit + process.ecalRecHit )

process.p = cms.Path(process.reconstruction_step)
process.p *= process.phisymcalib
